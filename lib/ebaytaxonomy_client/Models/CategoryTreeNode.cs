// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebaytaxonomy.Models
{
    using System.Collections.Generic;
    using Newtonsoft.Json;

    /// <summary>
    /// This type contains information about all nodes of a category tree or
    /// subtree hierarchy, including and below the specified
    /// &lt;b&gt;Category&lt;/b&gt;, down to the leaf nodes. It is a
    /// recursive structure.
    /// </summary>
    public partial class CategoryTreeNode
    {
        /// <summary>
        /// Initializes a new instance of the CategoryTreeNode class.
        /// </summary>
        public CategoryTreeNode() { }

        /// <summary>
        /// Initializes a new instance of the CategoryTreeNode class.
        /// </summary>
        public CategoryTreeNode(Category category = default(Category), int? categoryTreeNodeLevel = default(int?), IList<CategoryTreeNode> childCategoryTreeNodes = default(IList<CategoryTreeNode>), bool? leafCategoryTreeNode = default(bool?), string parentCategoryTreeNodeHref = default(string))
        {
            Category = category;
            CategoryTreeNodeLevel = categoryTreeNodeLevel;
            ChildCategoryTreeNodes = childCategoryTreeNodes;
            LeafCategoryTreeNode = leafCategoryTreeNode;
            ParentCategoryTreeNodeHref = parentCategoryTreeNodeHref;
        }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public Category Category { get; set; }

        /// <summary>
        /// The absolute level of the current category tree node in the
        /// hierarchy of its category tree. Note: The root node of any full
        /// category tree is always at level 0.
        /// </summary>
        [JsonProperty(PropertyName = "categoryTreeNodeLevel")]
        public int? CategoryTreeNodeLevel { get; set; }

        /// <summary>
        /// An array of one or more category tree nodes that are the immediate
        /// children of the current category tree node, as well as their
        /// children, recursively down to the leaf nodes. Returned only if
        /// the current category tree node is not a leaf node (the value of
        /// leafCategoryTreeNode is false).
        /// </summary>
        [JsonProperty(PropertyName = "childCategoryTreeNodes")]
        public IList<CategoryTreeNode> ChildCategoryTreeNodes { get; set; }

        /// <summary>
        /// A value of true indicates that the current category tree node is a
        /// leaf node (it has no child nodes). A value of false indicates
        /// that the current node has one or more child nodes, which are
        /// identified by the childCategoryTreeNodes array. Returned only if
        /// the value of this field is true.
        /// </summary>
        [JsonProperty(PropertyName = "leafCategoryTreeNode")]
        public bool? LeafCategoryTreeNode { get; set; }

        /// <summary>
        /// The href portion of the getCategorySubtree call that retrieves the
        /// subtree below the parent of this category tree node. Not returned
        /// if the current category tree node is the root node of its tree.
        /// </summary>
        [JsonProperty(PropertyName = "parentCategoryTreeNodeHref")]
        public string ParentCategoryTreeNodeHref { get; set; }

    }
}
