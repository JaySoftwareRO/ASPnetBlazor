// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebayinventory.Models
{
    using System.Collections.Generic;
    using Newtonsoft.Json;

    /// <summary>
    /// This type is used to express detailed information on errors and
    /// warnings that may occur with a call request.
    /// </summary>
    public partial class Error
    {
        /// <summary>
        /// Initializes a new instance of the Error class.
        /// </summary>
        public Error() { }

        /// <summary>
        /// Initializes a new instance of the Error class.
        /// </summary>
        public Error(string category = default(string), string domain = default(string), int? errorId = default(int?), IList<string> inputRefIds = default(IList<string>), string longMessage = default(string), string message = default(string), IList<string> outputRefIds = default(IList<string>), IList<ErrorParameter> parameters = default(IList<ErrorParameter>), string subdomain = default(string))
        {
            Category = category;
            Domain = domain;
            ErrorId = errorId;
            InputRefIds = inputRefIds;
            LongMessage = longMessage;
            Message = message;
            OutputRefIds = outputRefIds;
            Parameters = parameters;
            Subdomain = subdomain;
        }

        /// <summary>
        /// This string value indicates the error category. There are three
        /// categories of errors: request errors, application errors, and
        /// system errors.
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public string Category { get; set; }

        /// <summary>
        /// The name of the domain in which the error or warning occurred.
        /// </summary>
        [JsonProperty(PropertyName = "domain")]
        public string Domain { get; set; }

        /// <summary>
        /// A unique code that identifies the particular error or warning that
        /// occurred. Your application can use error codes as identifiers in
        /// your customized error-handling algorithms.
        /// </summary>
        [JsonProperty(PropertyName = "errorId")]
        public int? ErrorId { get; set; }

        /// <summary>
        /// An array of one or more reference IDs which identify the specific
        /// request element(s) most closely associated to the error or
        /// warning, if any.
        /// </summary>
        [JsonProperty(PropertyName = "inputRefIds")]
        public IList<string> InputRefIds { get; set; }

        /// <summary>
        /// A detailed description of the condition that caused the error or
        /// warning, and information on what to do to correct the problem.
        /// </summary>
        [JsonProperty(PropertyName = "longMessage")]
        public string LongMessage { get; set; }

        /// <summary>
        /// A description of the condition that caused the error or warning.
        /// </summary>
        [JsonProperty(PropertyName = "message")]
        public string Message { get; set; }

        /// <summary>
        /// An array of one or more reference IDs which identify the specific
        /// response element(s) most closely associated to the error or
        /// warning, if any.
        /// </summary>
        [JsonProperty(PropertyName = "outputRefIds")]
        public IList<string> OutputRefIds { get; set; }

        /// <summary>
        /// Various warning and error messages return one or more variables
        /// that contain contextual information about the error or waring.
        /// This is often the field or value that triggered the error or
        /// warning.
        /// </summary>
        [JsonProperty(PropertyName = "parameters")]
        public IList<ErrorParameter> Parameters { get; set; }

        /// <summary>
        /// The name of the subdomain in which the error or warning occurred.
        /// </summary>
        [JsonProperty(PropertyName = "subdomain")]
        public string Subdomain { get; set; }

    }
}
