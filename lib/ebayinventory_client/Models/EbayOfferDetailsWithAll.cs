// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebayinventory.Models
{
    using System.Collections.Generic;
    using Newtonsoft.Json;

    /// <summary>
    /// This type provides details of an offer, and is used by the response
    /// payloads of the &lt;strong&gt;getOffer&lt;/strong&gt; and the
    /// &lt;strong&gt;getOffers&lt;/strong&gt; calls.
    /// </summary>
    public partial class EbayOfferDetailsWithAll
    {
        /// <summary>
        /// Initializes a new instance of the EbayOfferDetailsWithAll class.
        /// </summary>
        public EbayOfferDetailsWithAll() { }

        /// <summary>
        /// Initializes a new instance of the EbayOfferDetailsWithAll class.
        /// </summary>
        public EbayOfferDetailsWithAll(int? availableQuantity = default(int?), string categoryId = default(string), Charity charity = default(Charity), string format = default(string), bool? includeCatalogProductDetails = default(bool?), ListingDetails listing = default(ListingDetails), string listingDescription = default(string), string listingDuration = default(string), ListingPolicies listingPolicies = default(ListingPolicies), int? lotSize = default(int?), string marketplaceId = default(string), string merchantLocationKey = default(string), string offerId = default(string), PricingSummary pricingSummary = default(PricingSummary), int? quantityLimitPerBuyer = default(int?), string sku = default(string), string status = default(string), IList<string> storeCategoryNames = default(IList<string>), Tax tax = default(Tax))
        {
            AvailableQuantity = availableQuantity;
            CategoryId = categoryId;
            Charity = charity;
            Format = format;
            IncludeCatalogProductDetails = includeCatalogProductDetails;
            Listing = listing;
            ListingDescription = listingDescription;
            ListingDuration = listingDuration;
            ListingPolicies = listingPolicies;
            LotSize = lotSize;
            MarketplaceId = marketplaceId;
            MerchantLocationKey = merchantLocationKey;
            OfferId = offerId;
            PricingSummary = pricingSummary;
            QuantityLimitPerBuyer = quantityLimitPerBuyer;
            Sku = sku;
            Status = status;
            StoreCategoryNames = storeCategoryNames;
            Tax = tax;
        }

        /// <summary>
        /// This integer value indicates the quantity of the inventory item
        /// (specified by the sku value) that will be available for purchase
        /// by buyers shopping on the eBay site specified in the
        /// marketplaceId field. For unpublished offers where the available
        /// quantity has yet to be set, the availableQuantity value is set to
        /// 0.
        /// </summary>
        [JsonProperty(PropertyName = "availableQuantity")]
        public int? AvailableQuantity { get; set; }

        /// <summary>
        /// The unique identifier of the primary eBay category that the
        /// inventory item is listed under. This field is always returned for
        /// published offers, but is only returned if set for unpublished
        /// offers.
        /// </summary>
        [JsonProperty(PropertyName = "categoryId")]
        public string CategoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "charity")]
        public Charity Charity { get; set; }

        /// <summary>
        /// This enumerated value indicates the listing format of the offer.
        /// Currently, the only supported value for this field is
        /// FIXED_PRICE. For implementation help, refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/FormatTypeEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// This field indicates whether or not eBay product catalog details
        /// are applied to a listing. A value of true indicates the listing
        /// corresponds to the eBay product associated with the provided
        /// product identifier. The product identifier is provided in
        /// createOrReplaceInventoryItem. Note: Though the
        /// includeCatalogProductDetails parameter is not required to be
        /// submitted in the request, the parameter defaults to 'true' if
        /// omitted.
        /// </summary>
        [JsonProperty(PropertyName = "includeCatalogProductDetails")]
        public bool? IncludeCatalogProductDetails { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "listing")]
        public ListingDetails Listing { get; set; }

        /// <summary>
        /// The description of the eBay listing that is part of the
        /// unpublished or published offer. This field is always returned for
        /// published offers, but is only returned if set for unpublished
        /// offers. Max Length: 500000 (which includes HTML markup/tags)
        /// </summary>
        [JsonProperty(PropertyName = "listingDescription")]
        public string ListingDescription { get; set; }

        /// <summary>
        /// This field indicates the number of days that the listing will be
        /// active. 'GTC' (Good 'til Cancelled) listings are automatically
        /// renewed each calendar month until the seller decides to end the
        /// listing. Note: This field is always returned and its value is
        /// always GTC since the Inventory API currently only supports
        /// fixed-price listings, and the only supported listing duration for
        /// fixed-price listings is 'GTC'. For implementation help, refer to
        /// &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/ListingDurationEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "listingDuration")]
        public string ListingDuration { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "listingPolicies")]
        public ListingPolicies ListingPolicies { get; set; }

        /// <summary>
        /// This field is only applicable and returned if the listing is a lot
        /// listing. A lot listing is a listing that has multiple quantity of
        /// the same product. An example would be a set of four identical car
        /// tires. The integer value in this field is the number of identical
        /// items being sold through the lot listing.
        /// </summary>
        [JsonProperty(PropertyName = "lotSize")]
        public int? LotSize { get; set; }

        /// <summary>
        /// This enumeration value is the unique identifier of the eBay site
        /// on which the offer is available, or will be made available. For
        /// implementation help, refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/MarketplaceEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// The unique identifier of the inventory location. This identifier
        /// is set up by the merchant when the inventory location is first
        /// created with the createInventoryLocation call. Once this value is
        /// set for an inventory location, it can not be modified. To get
        /// more information about this inventory location, the
        /// getInventoryLocation call can be used, passing in this value at
        /// the end of the call URI. This field is always returned for
        /// published offers, but is only returned if set for unpublished
        /// offers. Max length: 36
        /// </summary>
        [JsonProperty(PropertyName = "merchantLocationKey")]
        public string MerchantLocationKey { get; set; }

        /// <summary>
        /// The unique identifier of the offer. This identifier is used in
        /// many offer-related calls, and it is also used in the
        /// bulkUpdatePriceQuantity call.
        /// </summary>
        [JsonProperty(PropertyName = "offerId")]
        public string OfferId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "pricingSummary")]
        public PricingSummary PricingSummary { get; set; }

        /// <summary>
        /// This field is only applicable and set if the seller wishes to set
        /// a restriction on the purchase quantity of an inventory item per
        /// seller. If this field is set by the seller for the offer, then
        /// each distinct buyer may purchase up to, but not exceed the
        /// quantity in this field. So, if this field's value is 5, each
        /// buyer may purchase a quantity of the inventory item between one
        /// and five, and the purchases can occur in one multiple-quantity
        /// purchase, or over multiple transactions. If a buyer attempts to
        /// purchase one or more of these products, and the cumulative
        /// quantity will take the buyer beyond the quantity limit, that
        /// buyer will be blocked from that purchase.
        /// </summary>
        [JsonProperty(PropertyName = "quantityLimitPerBuyer")]
        public int? QuantityLimitPerBuyer { get; set; }

        /// <summary>
        /// This is the seller-defined SKU value of the product in the offer.
        /// Max Length: 50
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// The enumeration value in this field specifies the status of the
        /// offer - either PUBLISHED or UNPUBLISHED. For implementation help,
        /// refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/OfferStatusEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// This container is returned if the seller chose to place the
        /// inventory item into one or two eBay store categories that the
        /// seller has set up for their eBay store. The string value(s) in
        /// this container will be the full path(s) to the eBay store
        /// categories, as shown below:
        /// &amp;quot;storeCategoryNames&amp;quot;: [
        /// &amp;quot;/Fashion/Men/Shirts&amp;quot;,
        /// &amp;quot;/Fashion/Men/Accessories&amp;quot; ],
        /// </summary>
        [JsonProperty(PropertyName = "storeCategoryNames")]
        public IList<string> StoreCategoryNames { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "tax")]
        public Tax Tax { get; set; }

    }
}
