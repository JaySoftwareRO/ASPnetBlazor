// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebayinventory.Models
{
    using System.Collections.Generic;
    using Newtonsoft.Json;

    /// <summary>
    /// This type is used to display the result for each offer and/or
    /// inventory item that the seller attempted to update with a
    /// &lt;strong&gt;bulkUpdatePriceQuantity&lt;/strong&gt; call. If any
    /// errors or warnings occur, the error/warning data is returned at the
    /// offer/inventory item level.
    /// </summary>
    public partial class PriceQuantityResponse
    {
        /// <summary>
        /// Initializes a new instance of the PriceQuantityResponse class.
        /// </summary>
        public PriceQuantityResponse() { }

        /// <summary>
        /// Initializes a new instance of the PriceQuantityResponse class.
        /// </summary>
        public PriceQuantityResponse(IList<Error> errors = default(IList<Error>), string offerId = default(string), string sku = default(string), int? statusCode = default(int?), IList<Error> warnings = default(IList<Error>))
        {
            Errors = errors;
            OfferId = offerId;
            Sku = sku;
            StatusCode = statusCode;
            Warnings = warnings;
        }

        /// <summary>
        /// This array will be returned if there were one or more errors
        /// associated with the update to the offer or inventory item record.
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<Error> Errors { get; set; }

        /// <summary>
        /// The unique identifier of the offer that was updated. This field
        /// will not be returned in situations where the seller is only
        /// updating the total 'ship-to-home' quantity of an inventory item
        /// record.
        /// </summary>
        [JsonProperty(PropertyName = "offerId")]
        public string OfferId { get; set; }

        /// <summary>
        /// This is the seller-defined SKU value of the product. This field is
        /// returned whether the seller attempted to update an offer with the
        /// SKU value or just attempted to update the total 'ship-to-home'
        /// quantity of an inventory item record. Max Length: 50
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// The value returned in this container will indicate the status of
        /// the attempt to update the price and/or quantity of the offer
        /// (specified in the corresponding offerId field) or the attempt to
        /// update the total 'ship-to-home' quantity of an inventory item
        /// (specified in the corresponding sku field). For a completely
        /// successful update of an offer or inventory item record, a value
        /// of 200 will appear in this field. A user can view the HTTP status
        /// codes section for information on other status codes that may be
        /// returned with the bulkUpdatePriceQuantity method.
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public int? StatusCode { get; set; }

        /// <summary>
        /// This array will be returned if there were one or more warnings
        /// associated with the update to the offer or inventory item record.
        /// </summary>
        [JsonProperty(PropertyName = "warnings")]
        public IList<Error> Warnings { get; set; }

    }
}
