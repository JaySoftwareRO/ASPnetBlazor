// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebayinventory.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This type is used by the &lt;strong&gt;bulkCreateOffer&lt;/strong&gt;
    /// response to show the status of each offer that the seller attempted
    /// to create with the &lt;strong&gt;bulkCreateOffer&lt;/strong&gt;
    /// method. For each offer that is created successfully, the returned
    /// &lt;strong&gt;statusCode&lt;/strong&gt; value should be
    /// &lt;code&gt;200&lt;/code&gt;, and a unique
    /// &lt;strong&gt;offerId&lt;/strong&gt; should be created for each
    /// offer. If any issues occur with the creation of any offers,
    /// &lt;strong&gt;errors&lt;/strong&gt; and/or
    /// &lt;strong&gt;warnings&lt;/strong&gt; containers will be returned.
    /// </summary>
    public partial class OfferSkuResponse
    {
        /// <summary>
        /// Initializes a new instance of the OfferSkuResponse class.
        /// </summary>
        public OfferSkuResponse() { }

        /// <summary>
        /// Initializes a new instance of the OfferSkuResponse class.
        /// </summary>
        public OfferSkuResponse(IList<Error> errors = default(IList<Error>), string format = default(string), string marketplaceId = default(string), string offerId = default(string), string sku = default(string), int? statusCode = default(int?), IList<Error> warnings = default(IList<Error>))
        {
            Errors = errors;
            Format = format;
            MarketplaceId = marketplaceId;
            OfferId = offerId;
            Sku = sku;
            StatusCode = statusCode;
            Warnings = warnings;
        }

        /// <summary>
        /// This container will be returned at the offer level, and will
        /// contain one or more errors if any occurred with the attempted
        /// creation of the corresponding offer.
        /// </summary>
        [JsonProperty(PropertyName = "errors")]
        public IList<Error> Errors { get; set; }

        /// <summary>
        /// This enumeration value indicates the listing format of the offer.
        /// The Inventory API currently only supports fixed-price listings,
        /// so the enumeration value returned here is always FIXED_PRICE. For
        /// implementation help, refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/FormatTypeEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "format")]
        public string Format { get; set; }

        /// <summary>
        /// This enumeration value is the unique identifier of the eBay
        /// marketplace for which the offer will be made available. This
        /// enumeration value should be the same for all offers since the
        /// bulkCreateOffer method can only be used to create offers for one
        /// eBay marketplace at a time. For implementation help, refer to
        /// &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/inventory/types/MarketplaceEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "marketplaceId")]
        public string MarketplaceId { get; set; }

        /// <summary>
        /// The unique identifier of the newly-created offer. This identifier
        /// should be automatically created by eBay if the creation of the
        /// offer was successful. It is not returned if the creation of the
        /// offer was not successful. In which case, the user may want to
        /// scan the corresponding errors and/or warnings container to see
        /// what the issue may be.
        /// </summary>
        [JsonProperty(PropertyName = "offerId")]
        public string OfferId { get; set; }

        /// <summary>
        /// The seller-defined Stock-Keeping Unit (SKU) of the inventory item.
        /// The sku value is required for each product offer that the seller
        /// is trying to create, and it is always returned to identified the
        /// product that is associated with the offer.
        /// </summary>
        [JsonProperty(PropertyName = "sku")]
        public string Sku { get; set; }

        /// <summary>
        /// The integer value returned in this field is the http status code.
        /// If an offer is created successfully, the value returned in this
        /// field should be 200. A user can view the HTTP status codes
        /// section for information on other status codes that may be
        /// returned with the bulkCreateOffer method.
        /// </summary>
        [JsonProperty(PropertyName = "statusCode")]
        public int? StatusCode { get; set; }

        /// <summary>
        /// This container will be returned at the offer level, and will
        /// contain one or more warnings if any occurred with the attempted
        /// creation of the corresponding offer. Note that it is possible
        /// that an offer can be created successfully even if one or more
        /// warnings are triggered.
        /// </summary>
        [JsonProperty(PropertyName = "warnings")]
        public IList<Error> Warnings { get; set; }

    }
}
