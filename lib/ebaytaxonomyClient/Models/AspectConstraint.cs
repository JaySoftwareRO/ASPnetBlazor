// Code generated by Microsoft (R) AutoRest Code Generator 0.16.0.0
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.

namespace ebaytaxonomy.Models
{
    using System;
    using System.Linq;
    using System.Collections.Generic;
    using Newtonsoft.Json;
    using Microsoft.Rest;
    using Microsoft.Rest.Serialization;

    /// <summary>
    /// This type contains information about the formatting, occurrence, and
    /// support of an aspect.
    /// </summary>
    public partial class AspectConstraint
    {
        /// <summary>
        /// Initializes a new instance of the AspectConstraint class.
        /// </summary>
        public AspectConstraint() { }

        /// <summary>
        /// Initializes a new instance of the AspectConstraint class.
        /// </summary>
        public AspectConstraint(IList<string> aspectApplicableTo = default(IList<string>), string aspectDataType = default(string), bool? aspectEnabledForVariations = default(bool?), string aspectFormat = default(string), int? aspectMaxLength = default(int?), string aspectMode = default(string), bool? aspectRequired = default(bool?), string aspectUsage = default(string), string expectedRequiredByDate = default(string), string itemToAspectCardinality = default(string))
        {
            AspectApplicableTo = aspectApplicableTo;
            AspectDataType = aspectDataType;
            AspectEnabledForVariations = aspectEnabledForVariations;
            AspectFormat = aspectFormat;
            AspectMaxLength = aspectMaxLength;
            AspectMode = aspectMode;
            AspectRequired = aspectRequired;
            AspectUsage = aspectUsage;
            ExpectedRequiredByDate = expectedRequiredByDate;
            ItemToAspectCardinality = itemToAspectCardinality;
        }

        /// <summary>
        /// This value indicate if the aspect identified by the
        /// aspects.localizedAspectName field is a product aspect (relevant
        /// to catalog products in the category) or an item/instance aspect,
        /// which is an aspect whose value will vary based on a particular
        /// instance of the product.
        /// </summary>
        [JsonProperty(PropertyName = "aspectApplicableTo")]
        public IList<string> AspectApplicableTo { get; set; }

        /// <summary>
        /// The data type of this aspect. For implementation help, refer to
        /// &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/taxonomy/types/AspectDataTypeEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "aspectDataType")]
        public string AspectDataType { get; set; }

        /// <summary>
        /// A value of true indicates that this aspect can be used to help
        /// identify item variations.
        /// </summary>
        [JsonProperty(PropertyName = "aspectEnabledForVariations")]
        public bool? AspectEnabledForVariations { get; set; }

        /// <summary>
        /// Returned only if the value of aspectDataType identifies a data
        /// type that requires specific formatting. Currently, this field
        /// provides formatting hints as follows: DATE: YYYY, YYYYMM,
        /// YYYYMMDD NUMBER: int32, double
        /// </summary>
        [JsonProperty(PropertyName = "aspectFormat")]
        public string AspectFormat { get; set; }

        /// <summary>
        /// The maximum length of the item/instance aspect's value. The seller
        /// must make sure not to exceed this length when specifying the
        /// instance aspect's value for a product. This field is only
        /// returned for instance aspects.
        /// </summary>
        [JsonProperty(PropertyName = "aspectMaxLength")]
        public int? AspectMaxLength { get; set; }

        /// <summary>
        /// The manner in which values of this aspect must be specified by the
        /// seller (as free text or by selecting from available options). For
        /// implementation help, refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/taxonomy/types/AspectModeEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "aspectMode")]
        public string AspectMode { get; set; }

        /// <summary>
        /// A value of true indicates that this aspect is required when
        /// offering items in the specified category.
        /// </summary>
        [JsonProperty(PropertyName = "aspectRequired")]
        public bool? AspectRequired { get; set; }

        /// <summary>
        /// The enumeration value returned in this field will indicate if the
        /// corresponding aspect is recommended or optional. Note: This field
        /// is always returned, even for hard-mandated/required aspects
        /// (where aspectRequired: true). The value returned for required
        /// aspects will be RECOMMENDED, but they are actually required and a
        /// seller will be blocked from listing or revising an item without
        /// these aspects. For implementation help, refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/taxonomy/types/AspectUsageEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "aspectUsage")]
        public string AspectUsage { get; set; }

        /// <summary>
        /// The expected date after which the aspect will be required. Note:
        /// The value returned in this field specifies only an approximate
        /// date, which may not reflect the actual date after which the
        /// aspect is required.
        /// </summary>
        [JsonProperty(PropertyName = "expectedRequiredByDate")]
        public string ExpectedRequiredByDate { get; set; }

        /// <summary>
        /// Indicates whether this aspect can accept single or multiple values
        /// for items in the specified category. For implementation help,
        /// refer to &lt;a
        /// href='https://developer.ebay.com/devzone/rest/api-ref/taxonomy/types/ItemToAspectCardinalityEnum.html'&gt;eBay
        /// API documentation&lt;/a&gt;
        /// </summary>
        [JsonProperty(PropertyName = "itemToAspectCardinality")]
        public string ItemToAspectCardinality { get; set; }

    }
}
