/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/foundation-sites@6.6.3/js/foundation.util.mediaQuery.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
"use strict";import $ from"jquery";const defaultQueries={default:"only screen",landscape:"only screen and (orientation: landscape)",portrait:"only screen and (orientation: portrait)",retina:"only screen and (-webkit-min-device-pixel-ratio: 2),only screen and (min--moz-device-pixel-ratio: 2),only screen and (-o-min-device-pixel-ratio: 2/1),only screen and (min-device-pixel-ratio: 2),only screen and (min-resolution: 192dpi),only screen and (min-resolution: 2dppx)"};window.matchMedia||(window.matchMedia=function(){var e=window.styleMedia||window.media;if(!e){var t,i=document.createElement("style"),n=document.getElementsByTagName("script")[0];i.type="text/css",i.id="matchmediajs-test",n?n.parentNode.insertBefore(i,n):document.head.appendChild(i),t="getComputedStyle"in window&&window.getComputedStyle(i,null)||i.currentStyle,e={matchMedium:function(e){var n="@media "+e+"{ #matchmediajs-test { width: 1px; } }";return i.styleSheet?i.styleSheet.cssText=n:i.textContent=n,"1px"===t.width}}}return function(t){return{matches:e.matchMedium(t||"all"),media:t||"all"}}}());var MediaQuery={queries:[],current:"",_init(){if(!0!==this.isInitialized){this.isInitialized=!0;$("meta.foundation-mq").length||$('<meta class="foundation-mq">').appendTo(document.head);var e,t=$(".foundation-mq").css("font-family");for(var i in e=parseStyleToObject(t),this.queries=[],e)e.hasOwnProperty(i)&&this.queries.push({name:i,value:`only screen and (min-width: ${e[i]})`});this.current=this._getCurrentSize(),this._watcher()}},_reInit(){this.isInitialized=!1,this._init()},atLeast(e){var t=this.get(e);return!!t&&window.matchMedia(t).matches},only(e){return e===this._getCurrentSize()},upTo(e){const t=this.next(e);return!t||!this.atLeast(t)},is(e){const t=e.trim().split(" ").filter(e=>!!e.length),[i,n=""]=t;if("only"===n)return this.only(i);if(!n||"up"===n)return this.atLeast(i);if("down"===n)return this.upTo(i);throw new Error(`\n      Invalid breakpoint passed to MediaQuery.is().\n      Expected a breakpoint name formatted like "<size> <modifier>", got "${e}".\n    `)},get(e){for(var t in this.queries)if(this.queries.hasOwnProperty(t)){var i=this.queries[t];if(e===i.name)return i.value}return null},next(e){const t=this.queries.findIndex(t=>this._getQueryName(t)===e);if(-1===t)throw new Error(`\n        Unknown breakpoint "${e}" passed to MediaQuery.next().\n        Ensure it is present in your Sass "$breakpoints" setting.\n      `);const i=this.queries[t+1];return i?i.name:null},_getQueryName(e){if("string"==typeof e)return e;if("object"==typeof e)return e.name;throw new TypeError(`\n      Invalid value passed to MediaQuery._getQueryName().\n      Expected a breakpoint name (String) or a breakpoint query (Object), got "${e}" (${typeof e})\n    `)},_getCurrentSize(){for(var e,t=0;t<this.queries.length;t++){var i=this.queries[t];window.matchMedia(i.value).matches&&(e=i)}return e&&this._getQueryName(e)},_watcher(){$(window).off("resize.zf.mediaquery").on("resize.zf.mediaquery",()=>{var e=this._getCurrentSize(),t=this.current;e!==t&&(this.current=e,$(window).trigger("changed.zf.mediaquery",[e,t]))})}};function parseStyleToObject(e){var t={};return"string"!=typeof e?t:(e=e.trim().slice(1,-1))?t=e.split("&").reduce(function(e,t){var i=t.replace(/\+/g," ").split("="),n=i[0],r=i[1];return n=decodeURIComponent(n),r=void 0===r?null:decodeURIComponent(r),e.hasOwnProperty(n)?Array.isArray(e[n])?e[n].push(r):e[n]=[e[n],r]:e[n]=r,e},{}):t}export{MediaQuery};
//# sourceMappingURL=/sm/21e858ea68558e428410cd3b1b12fc3405899ebc8ac49bfb387c306d462eac24.map