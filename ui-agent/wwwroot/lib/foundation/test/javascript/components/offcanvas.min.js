/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/foundation-sites@6.6.3/test/javascript/components/offcanvas.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("Off Canvas",function(){var n,o,a='<div class="off-canvas-wrapper">\n      <div class="off-canvas-wrapper-inner" data-off-canvas-wrapper>\n        <div class="off-canvas position-left" id="offCanvas" data-off-canvas data-content-scroll="false">\n\n          \x3c!-- Close button --\x3e\n          <button class="close-button" aria-label="Close menu" type="button" data-close>\n            <span aria-hidden="true">&times;</span>\n          </button>\n\n          \x3c!-- Menu --\x3e\n          <ul class="vertical menu">\n            <li><a href="#">Foundation</a></li>\n            <li><a href="#">Dot</a></li>\n            <li><a href="#">ZURB</a></li>\n            <li><a href="#">Com</a></li>\n            <li><a href="#">Slash</a></li>\n            <li><a href="#">Sites</a></li>\n          </ul>\n\n        </div>\n\n        <div class="off-canvas-content" data-off-canvas-content>\n          \x3c!-- Page content --\x3e\n          PAGE_CONTENT.\n\n          \x3c!-- Triggers --\x3e\n          <button type="button" class="button" data-toggle="offCanvas">Open Menu</button>\n        </div>\n      </div>\n    </div>';afterEach(function(){n.destroy(),document.activeElement.blur(),o.remove()}),describe("constructor()",function(){it("stores the element and plugin options",function(){o=$(a).appendTo("body"),(n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{})).$element.should.be.an("object"),n.options.should.be.an("object")})}),describe("init()",function(){it("finds triggers for the Off Canvas",function(){o=$(a).appendTo("body"),(n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{})).$triggers.length.should.be.equal(1)}),it("sets ARIA attributes",function(){o=$(a).appendTo("body"),(n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{})).$element.should.have.attr("aria-hidden","true"),n.$triggers.should.have.attr("aria-controls",n.$element.attr("id")),n.$triggers.should.have.attr("aria-expanded","false")}),it("closes Off Canvas on outside click if closeOnClick option is true",function(e){o=$(a).appendTo("body"),(n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{closeOnClick:!0})).$overlay.should.be.an("object"),o.one("opened.zf.offCanvas",function(){n.$overlay.trigger("click"),n.$element.should.not.have.class("is-open"),e()}),n.open()})}),describe("open()",function(){it("toggles ARIA attributes",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){n.$triggers.should.have.attr("aria-expanded","true"),n.$element.should.have.attr("aria-hidden","false"),e()}),n.open()}),it("adds active classes",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("openedEnd.zf.offCanvas",function(){n.$element.should.have.class("is-open"),$("body").should.have.class("is-off-canvas-open"),e()}),n.open()}),it("focusses Off Canvas if autoFocus option is true",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{autoFocus:!0}),o.one("openedEnd.zf.offCanvas",function(){n.$element.find("a, button")[0].should.be.equal(document.activeElement),e()}),n.open()}),it("traps focus if trapFocus option is true",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{trapFocus:!0});let f=sinon.spy(Foundation.Keyboard,"trapFocus");o.one("openedEnd.zf.offCanvas",function(){sinon.assert.called(f),Foundation.Keyboard.trapFocus.restore(),e()}),n.open()}),it("fires opened.zf.offCanvas event",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){e()}),n.open()}),it("fires openedEnd.zf.offCanvas event",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){o.one("openedEnd.zf.offCanvas",function(){e()})}),n.open()})}),describe("close()",function(){it("toggles ARIA attributes",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){n.close(),n.$triggers.should.have.attr("aria-expanded","false"),n.$element.should.have.attr("aria-hidden","true"),e()}),n.open()}),it("removes active classes",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("closed.zf.offCanvas",function(){n.$element.should.not.have.class("is-open"),$("body").should.not.have.class("is-off-canvas-open"),e()}),n.open(),o.one("openedEnd.zf.offCanvas",()=>n.close())}),it("fires close.zf.offCanvas event",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){o.one("close.zf.offCanvas",function(){e()}),n.close()}),n.open()}),it("fires closed.zf.offCanvas event",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){o.one("close.zf.offCanvas",function(){n.$element.one(Foundation.transitionend(n.$element),function(){o.one("closed.zf.offCanvas",function(){e()})})}),n.close(),n.$element.triggerHandler(Foundation.transitionend(n.$element))}),n.open()}),it("fires closed.zf.offCanvas event",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("openedEnd.zf.offCanvas",function(){o.one("closed.zf.offCanvas",function(){e()}),n.close()}),n.open()}),it("releases focus if trapFocus option is true",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{trapFocus:!0});let f=sinon.spy(Foundation.Keyboard,"releaseFocus");o.one("openedEnd.zf.offCanvas",function(){o.one("closed.zf.offCanvas",function(){sinon.assert.called(f),Foundation.Keyboard.releaseFocus.restore(),e()}),n.close()}),n.open()})}),describe("toggle()",function(){it("opens a closed Off Canvas",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("opened.zf.offCanvas",function(){n.$element.should.have.class("is-open"),e()}),n.toggle()}),it("closes an open Off Canvas",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("openedEnd.zf.offCanvas",function(){o.one("closed.zf.offCanvas",function(){n.$element.should.not.have.class("is-open"),e()}),n.toggle()}),n.toggle()})}),describe("keyboard events",function(){it("closes Off Canvas on ESCAPE",function(e){o=$(a).appendTo("body"),n=new Foundation.OffCanvas(o.find("[data-off-canvas]"),{}),o.one("openedEnd.zf.offCanvas",function(){o.one("closed.zf.offCanvas",function(){n.$element.should.not.have.class("is-open"),e()}),n.$element.focus().trigger(window.mockKeyboardEvent("ESCAPE"))}),n.open()})})});
//# sourceMappingURL=/sm/359d14c4190527f991b5592de4b5235f82fc603613497c15d7ad0872c14defb5.map