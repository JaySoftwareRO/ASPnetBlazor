/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/foundation-sites@6.6.3/test/javascript/components/dropdown.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
describe("Dropdown",function(){let o,n,e;const d=(o="")=>`<button class="${o}" type="button" data-toggle="my-dropdown">toggle</button>`,t=(o="")=>`<div class="${o}" data-dropdown id="my-dropdown">Dropdown</div>`,i=(o="")=>`<input type="text" placeholder="should auto focus" id="${o}" />`;afterEach(function(){o.destroy(),document.activeElement.blur(),n.remove(),e.remove()}),describe("constructor()",function(){it("stores the element & plugin options",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),(o=new Foundation.Dropdown(e,{})).$element.should.be.an("object"),o.options.should.be.an("object")})}),describe("open()",function(){it("fires show.zf.dropdown event",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{});let i=sinon.spy();e.on("show.zf.dropdown",i),o.open(),sinon.assert.called(i)}),it("make the dropdown visible",function(i){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{}),e.on("show.zf.dropdown",function(){$("#my-dropdown").should.not.be.hidden,$("#my-dropdown").should.have.attr("aria-hidden","false"),$("#my-dropdown").should.have.class("is-open"),i()}),o.open()}),it("traps focus accoding to trapFocus option",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{trapFocus:!0});let i=sinon.spy(Foundation.Keyboard,"trapFocus");o.open(),sinon.assert.called(i),Foundation.Keyboard.trapFocus.restore()}),it("should autofocus according to autoFocus option",function(t){n=$(d()).appendTo("body"),e=$(((o="",n="")=>`<div class="${o}" data-dropdown data-auto-focus="true" id="my-dropdown">Dropdown${i(n)}</div>`)("","inputToFocus")).appendTo("body"),o=new Foundation.Dropdown(e,{autoFocus:!0}),e.on("show.zf.dropdown",function(){document.activeElement.id.should.be.equal("inputToFocus"),t()}),o.open()})}),describe("close()",function(){it("releases focus if trapFocus option is true",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),(o=new Foundation.Dropdown(e,{trapFocus:!0})).open();let i=sinon.spy(Foundation.Keyboard,"releaseFocus");o.close(),sinon.assert.called(i),Foundation.Keyboard.releaseFocus.restore()})}),describe("inferred positioning",function(){it("default orientation should be bottom",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),(o=new Foundation.Dropdown(e,{})).open(),o.position.should.equal("bottom")}),it("gets right alignment from float-right",function(){n=$(d("custom-style-before float-right custom-style-after")).appendTo("body"),e=$(t()).appendTo("body"),(o=new Foundation.Dropdown(e,{})).open(),o.position.should.equal("bottom"),o.alignment.should.equal("right")})}),describe("closeOnClick option",function(){it("not closes a dropdown by clicking on the dropdown if closeOnClick option is true",function(i){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),(o=new Foundation.Dropdown(e,{closeOnClick:!0})).open();let p=sinon.spy(o,"close");o.$element.trigger("click"),setTimeout(()=>{sinon.assert.notCalled(p),i()},0)})}),describe("mouse events",function(){it("opens the dropdown on button click",function(i){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{});let p=sinon.spy(o,"open");n.trigger("click"),setTimeout(()=>{sinon.assert.called(p),i()},0)}),it("opens the dropdown on button hover",function(i){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{hover:!0,hoverDelay:42});let p=sinon.spy(o,"open");n.trigger("mouseenter"),setTimeout(()=>{sinon.assert.called(p),i()},42)})}),describe("keyboard events",function(){it("opens Dropdown on SPACE",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{}),n.focus().trigger(window.mockKeyboardEvent("SPACE")),e.should.be.visible}),it("does not focus Dropdown on SPACE by default",function(){n=$(d()).appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{}),n.focus().trigger(window.mockKeyboardEvent("SPACE")),document.activeElement.should.be.equal(n[0])}),it("focuses Dropdown on SPACE when container has a focusable element",function(){n=$(d()).appendTo("body"),e=$(((o="",n="")=>`<div class="${o}" data-dropdown id="my-dropdown">Dropdown${i(n)}</div>`)()).appendTo("body"),o=new Foundation.Dropdown(e,{}),n.focus().trigger(window.mockKeyboardEvent("SPACE")),document.activeElement.should.be.equal(n[0])}),it("does not focus Dropdown when anchor is an input",function(){n=$('<input type="text" data-toggle="my-dropdown">').appendTo("body"),e=$(t()).appendTo("body"),o=new Foundation.Dropdown(e,{}),n.focus().trigger(window.mockKeyboardEvent("SPACE")),document.activeElement.should.be.equal(n[0])})})});
//# sourceMappingURL=/sm/dc157ea015bd4049c73aad49697b1506dfb103c21daa390d84034896e23b9590.map