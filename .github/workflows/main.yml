# This is a basic workflow to help you get started with Actions

name: CI

on:
  push:
    branches: [ master ]

jobs:
  clients:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2
    - name: Setup .NET Core SDK
      uses: actions/setup-dotnet@v1.5.0
      with:
        dotnet-version: 3.1.x

    - name: Setup Node.js environment
      uses: actions/setup-node@v1.4.2
      with:
        node-version: 12.x

    - name: Restore packages and build
      run: |
        dotnet restore
        dotnet build

    - name: Install electronize tool
      run: |
        dotnet tool install ElectronNET.CLI -g

    - name: Build client app packages
      run: |
        cd ui-agent
        electronize build /target windows
        mv "bin/Desktop/ui-agent Setup 1.0.0.exe" "bin/Desktop/ui-agent-${{ github.ref }}.exe"
        # electronize build /target linux
        # electronize build /target osx
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: "bin/Desktop/ui-agent-${{ github.ref }}.exe"
        asset_name: ui-agent-${{ github.ref }}.exe
        asset_content_type: application/octet-stream
  server:
    runs-on: ubuntu-16.04
    steps:
    - uses: actions/checkout@v2
    - name: Docker Image
      uses: docker/build-push-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        repository: viovanov/bifrost
        tags: ${{ github.ref }},latest
        dockerfile: bifrost/Dockerfile
